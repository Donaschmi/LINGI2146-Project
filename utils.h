#define UTILS_H
#include "contiki.h"
#include <stdlib.h>
#include <stdint.h>

#define CHILDREN_SIZE 10
#define BUFFER_SIZE 30

enum TYPES {
  DATA,
  COMMAND,
  ALIVE,
  REQUEST,
  UNLINKED
};

/**
 * Open/close valve
 */
enum COMMANDS {
  OPEN,
  CLOSE
};

typedef struct child {
  linkaddr_t addr;
} child_t;

typedef struct parent {
  linkaddr_t addr;
  uint8_t id;
  int16_t RSSI;
} parent_t;


/*----------------------*/
typedef struct packet{
  uint8_t type;
} packet_t;

/**
 * Data generated by sensors and passed to parents
 */
typedef struct data {
  uint8_t type;
  linkaddr_t from;
  int sensor_value;
} data_t;

/**
 * Tell sensor at address dest that it should open the valve (or close it manually)
 */
typedef struct command {
  uint8_t type;
  linkaddr_t dest;
  unsigned open:1;
} command_t;

/**
 * Advertisement
 */
typedef struct alive{
  uint8_t type;
  uint8_t id;
} alive_t;

typedef struct request{
  uint8_t type;
} request_t;

typedef struct unlinked{
  uint8_t type;
} unlinked_t;


typedef struct buffer{
  data_t* data[BUFFER_SIZE];
} buffer_t;
